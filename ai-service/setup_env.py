#!/usr/bin/env python3
"""
Setup script to configure environment variables for the AI service.
Run this script to set up your .env file with Supabase credentials.
"""

import os

def setup_environment():
    """Set up environment variables for the AI service."""
    
    print("Setting up AI Service Environment Configuration")
    print("=" * 50)
    
    # Get Supabase credentials from user
    print("\nPlease provide your Supabase credentials:")
    print("   (You can find these in your Supabase project dashboard: Settings -> API)")
    
    supabase_url = input("\nSupabase URL (e.g., https://your-project.supabase.co): ").strip()
    if not supabase_url:
        supabase_url = "https://lkkgwwtrgqxpmqzmlpas.supabase.co"
        print(f"   Using default: {supabase_url}")
    
    supabase_service_key = input("\nSupabase Service Role Key: ").strip()
    if not supabase_service_key:
        print("   WARNING: Service role key is required for database access!")
        return False
    
    # AI Provider API Keys (optional - can use existing ones)
    print("\nAI Provider API Keys (press Enter to use existing):")
    openai_key = input("   OpenAI API Key: ").strip()
    if not openai_key:
        print("   WARNING: OpenAI API key is required for AI functionality!")
        return False
    
    anthropic_key = input("   Anthropic API Key: ").strip()
    if not anthropic_key:
        print("   WARNING: Anthropic API key is required for AI functionality!")
        return False
    
    # Create .env content
    env_content = f"""# AI Service Environment Variables
# Generated by setup_env.py

# API Configuration
API_HOST=0.0.0.0
API_PORT=8001
API_DEBUG=true

# AI Provider API Keys
OPENAI_API_KEY={openai_key}
ANTHROPIC_API_KEY={anthropic_key}

# Database Configuration
SUPABASE_URL={supabase_url}
SUPABASE_SERVICE_KEY={supabase_service_key}

# AI Service Configuration
DEFAULT_AI_PROVIDER=openai
DEFAULT_AI_MODEL=gpt-4o-mini
MAX_TOKENS_PER_REQUEST=4000
REQUEST_TIMEOUT=30

# Cost Configuration (per 1k tokens)
OPENAI_GPT4O_MINI_COST_PER_1K_TOKENS=0.00015
OPENAI_GPT4O_COST_PER_1K_TOKENS=0.005
ANTHROPIC_CLAUDE_3_HAIKU_COST_PER_1K_TOKENS=0.00025
ANTHROPIC_CLAUDE_3_SONNET_COST_PER_1K_TOKENS=0.003

# Validation Configuration
MAX_VALIDATION_REQUESTS_PER_MINUTE=60
PROPOSAL_EXPIRY_HOURS=24
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print(f"\nSUCCESS: Environment configuration saved to .env")
        print(f"   Location: {os.path.abspath('.env')}")
        
        # Test the configuration
        print(f"\nTesting configuration...")
        from config import get_settings
        settings = get_settings()
        
        if settings.supabase_url and settings.supabase_service_key:
            print(f"   SUCCESS: Supabase URL: {settings.supabase_url}")
            print(f"   SUCCESS: Service Key: {'*' * 20}...{settings.supabase_service_key[-4:]}")
        else:
            print(f"   ERROR: Supabase configuration missing")
            return False
            
        if settings.openai_api_key:
            print(f"   SUCCESS: OpenAI API Key: {'*' * 20}...{settings.openai_api_key[-4:]}")
        else:
            print(f"   ERROR: OpenAI API Key missing")
            
        if settings.anthropic_api_key:
            print(f"   SUCCESS: Anthropic API Key: {'*' * 20}...{settings.anthropic_api_key[-4:]}")
        else:
            print(f"   ERROR: Anthropic API Key missing")
        
        print(f"\nSetup complete! You can now start the AI service with:")
        print(f"   python main.py")
        
        return True
        
    except Exception as e:
        print(f"\nERROR: Error creating .env file: {e}")
        return False

if __name__ == "__main__":
    success = setup_environment()
    if not success:
        print(f"\nManual setup instructions:")
        print(f"   1. Create a .env file in the ai-service directory")
        print(f"   2. Add your Supabase service role key:")
        print(f"      SUPABASE_SERVICE_KEY=your_service_role_key_here")
        print(f"   3. Restart the AI service")
        exit(1)
